---
# Assumptions:
# 1) import-build has already run
# 2) distros and tempdirs are in the variable-space
- name: Remove task.output
  file:
    path: ./task.output
    state: absent

- name: Run built containers detached
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} run --detached >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - run
    - run_no_validate
    - restart
    - restart_no_validate
    - stop
    - stop_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Wait until built containers are running
  command: "docker inspect --format='{{'{{'}} .State.Status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_run_status
  until: container_run_status.stdout == 'running'
  retries: 6
  delay: 5
  tags:
    - restart
    - run

- name: Note start time
  command: "docker inspect --format='{{'{{'}} .State.StartedAt {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_run_start
  tags:
    - restart
    - run

- name: Restart containers
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} restart >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - restart
    - restart_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Wait until built containers are running
  command: "docker inspect --format='{{'{{'}} .State.Status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_restart_status
  until: container_restart_status.stdout == 'running'
  retries: 6
  delay: 5
  tags:
    - restart
    - run

- name: Note start time
  command: "docker inspect --format='{{'{{'}} .State.StartedAt {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_restart_start
  tags:
    - restart
    - run

- name: Ensure containers were restarted
  assert:
    that:
      - container_run_start.stdout != container_restart_start.stdout
  tags:
    - restart

- name: Stop containers
  shell: >
    ansible-container --debug --project-path
    {{ tempdir.path|quote }}/test-{{ distro.name|quote }} stop >>task.output 2>&1
  register: output
  ignore_errors: yes
  tags:
    - stop
    - stop_no_validate
    - run
    - run_no_validate
    - restart
    - restart_no_validate

- include: includes/show-output.yml output_file=./task.output registered_output="{{ output }}"

- name: Wait until built containers are stop
  command: "docker inspect --format='{{'{{'}} .State.Status {{'}}'}}' test{{ distro.name|replace('-','') }}_{{ distro.name }}_1"
  register: container_stop_status
  until: container_stop_status.stdout != 'running'
  retries: 6
  delay: 5
  tags:
    - stop
